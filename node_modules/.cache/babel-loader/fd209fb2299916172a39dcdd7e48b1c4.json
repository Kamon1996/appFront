{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/socailapp/src/Pages/LoginPage/LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport './index.css';\nimport React from 'react';\nimport Input from '../../components/Input/Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeInput, clearForm, reqlogIn } from '../../Redux/actions/user';\nimport { useNavigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst loginFrom = [{\n  label: 'Имя',\n  type: 'text',\n  placeholder: 'Введите Имя',\n  name: 'name',\n  keyName: 'first_name'\n}, {\n  label: 'Фамилия',\n  type: 'text',\n  placeholder: 'Введите Фамилию',\n  name: 'sername',\n  keyName: 'last_name'\n}, {\n  label: 'Почта',\n  type: 'email',\n  placeholder: 'Введите Почту',\n  name: 'email',\n  keyName: 'email'\n}, {\n  label: 'Логин',\n  type: 'text',\n  placeholder: 'Введите Логин',\n  name: 'login',\n  keyName: 'login'\n}, {\n  label: 'Пароль',\n  type: 'password',\n  placeholder: 'Введите Пароль',\n  name: 'password',\n  keyName: 'password'\n}];\nexport default function LoginForm() {\n  _s();\n\n  const dispatch = useDispatch();\n\n  const inputHandler = (keyName, value) => {\n    dispatch(changeInput(keyName, value));\n  };\n\n  const navigate = useNavigate();\n\n  const logInHandler = e => {\n    e.preventDefault();\n    dispatch(reqlogIn());\n    navigate('/signin', {\n      replace: true\n    });\n  };\n\n  const user = useSelector(store => store.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form-wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: logInHandler,\n      action: \"\",\n      children: [loginFrom.map((input, index) => {\n        return /*#__PURE__*/_jsxDEV(Input, {\n          label: input.label,\n          type: input.type,\n          placeholder: input.placeholder,\n          name: input.name,\n          changeInput: e => inputHandler(input.keyName, e.target.value),\n          value: user[input.keyName]\n        }, input.keyName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => dispatch(clearForm()),\n          className: \"btn-nice red\",\n          type: \"reset\",\n          children: \"\\u041E\\u0447\\u0438\\u0441\\u0442\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-nice blue\",\n          type: \"submit\",\n          children: \"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"x16LEX5WEaF9w8V9GqGWTV3Yk2I=\", false, function () {\n  return [useDispatch, useNavigate, useSelector];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/dev/Desktop/socailapp/src/Pages/LoginPage/LoginForm.jsx"],"names":["React","Input","useDispatch","useSelector","changeInput","clearForm","reqlogIn","useNavigate","loginFrom","label","type","placeholder","name","keyName","LoginForm","dispatch","inputHandler","value","navigate","logInHandler","e","preventDefault","replace","user","store","map","input","index","target"],"mappings":"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","sourcesContent":["import './index.css';\n\nimport React from 'react';\nimport Input from '../../components/Input/Input';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeInput, clearForm, reqlogIn } from '../../Redux/actions/user';\nimport { useNavigate } from 'react-router';\n\nconst loginFrom = [\n  {\n    label: 'Имя',\n    type: 'text',\n    placeholder: 'Введите Имя',\n    name: 'name',\n    keyName: 'first_name',\n  },\n  {\n    label: 'Фамилия',\n    type: 'text',\n    placeholder: 'Введите Фамилию',\n    name: 'sername',\n    keyName: 'last_name',\n  },\n  {\n    label: 'Почта',\n    type: 'email',\n    placeholder: 'Введите Почту',\n    name: 'email',\n    keyName: 'email',\n  },\n  {\n    label: 'Логин',\n    type: 'text',\n    placeholder: 'Введите Логин',\n    name: 'login',\n    keyName: 'login',\n  },\n  {\n    label: 'Пароль',\n    type: 'password',\n    placeholder: 'Введите Пароль',\n    name: 'password',\n    keyName: 'password',\n  },\n];\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n  const inputHandler = (keyName, value) => {\n    dispatch(changeInput(keyName, value));\n  };\n  const navigate = useNavigate();\n  const logInHandler = (e) => {\n    e.preventDefault();\n    dispatch(reqlogIn());\n    navigate('/signin', { replace: true });\n  };\n  const user = useSelector((store) => store.user);\n  return (\n    <div className='login-form-wrapper'>\n      <form onSubmit={logInHandler} action=''>\n        {loginFrom.map((input, index) => {\n          return (\n            <Input\n              key={input.keyName}\n              label={input.label}\n              type={input.type}\n              placeholder={input.placeholder}\n              name={input.name}\n              changeInput={(e) => inputHandler(input.keyName, e.target.value)}\n              value={user[input.keyName]}\n            />\n          );\n        })}\n        <div className='row'>\n          <button\n            onClick={() => dispatch(clearForm())}\n            className='btn-nice red'\n            type='reset'\n          >\n            Очистить\n          </button>\n          <button className='btn-nice blue' type='submit'>\n            Подтвердить\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}