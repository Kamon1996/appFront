{"ast":null,"code":"import { ADD_NEW_COMMENT, ADD_NEW_POST, CHANGE_COMMENT, CHANGE_POST, DELETE_COMMENT, DELETE_POST, GET_CORRENT_POST, GET_POSTS_ALL, REQUEST_GET_POSTS_LIMITED, GET_POSTS_LIMITED, REQUEST_ADD_NEW_COMMENT, REQUEST_ADD_NEW_POST, REQUEST_CHANGE_COMMENT, REQUEST_CHANGE_POST, REQUEST_DELETE_COMMENT, REQUEST_DELETE_POST, REQUEST_GET_CORRENT_POST, REQUEST_GET_POSTS_ALL } from '../actions/types'; //-----------------------------------------------------------//\n//---------------------- POST ACTIONS -----------------------//\n//-----------------------------------------------------------//\n// --------------------Get All Posts----------------------- //\n\nexport const reqGetPostsAll = () => ({\n  type: REQUEST_GET_POSTS_ALL\n});\nexport const getPostsAll = allPosts => ({\n  type: GET_POSTS_ALL,\n  payload: allPosts\n}); // --------------------Get Posts Limited----------------------- //\n\nexport const reqGetPostLimited = count => ({\n  type: REQUEST_GET_POSTS_LIMITED,\n  payload: count\n});\nexport const getPostsLimited = posts => ({\n  type: GET_POSTS_LIMITED,\n  payload: posts\n}); // --------------------Get Corrent Post----------------------- //\n\nexport const reqGetCorrentPost = id => ({\n  type: REQUEST_GET_CORRENT_POST,\n  payload: id\n});\nexport const getCorrentPost = post => ({\n  type: GET_CORRENT_POST,\n  payload: post\n}); // --------------------Add New Post----------------------- //\n\nexport const addNewPost = newPost => ({\n  type: ADD_NEW_POST,\n  payload: newPost\n});\nexport const getDataForPost = newPost => ({\n  type: REQUEST_ADD_NEW_POST,\n  payload: newPost\n}); // --------------------Delete Post----------------------- //\n\nexport const reqDeletePost = id => ({\n  type: REQUEST_DELETE_POST,\n  payload: id\n});\nexport const deletePost = id => ({\n  type: DELETE_POST,\n  payload: id\n}); // --------------------Change Post----------------------- //\n\nexport const reqChangePost = (id, newData) => ({\n  type: REQUEST_CHANGE_POST,\n  payload: {\n    id,\n    newData\n  }\n});\nexport const changePost = changePost => ({\n  type: CHANGE_POST,\n  payload: changePost\n}); //-----------------------------------------------------------//\n//---------------------- COMMENT ACTIONS --------------------//\n//-----------------------------------------------------------//\n// --------------------Add new comment----------------------- //\n\nexport const reqAddNewComment = payload => ({\n  type: REQUEST_ADD_NEW_COMMENT,\n  payload\n});\nexport const addNewComment = newComment => ({\n  type: ADD_NEW_COMMENT,\n  payload: newComment\n}); // --------------------Delete Comment----------------------- //\n\nexport const reqDeleteComment = (commentId, postId) => ({\n  type: REQUEST_DELETE_COMMENT,\n  payload: {\n    commentId,\n    postId\n  }\n});\nexport const deleteComment = (commentId, postId) => ({\n  type: DELETE_COMMENT,\n  payload: {\n    commentId,\n    postId\n  }\n}); // --------------------Change Comment----------------------- //\n\nexport const reqChangeComment = (id, newComment) => ({\n  type: REQUEST_CHANGE_COMMENT,\n  payload: {\n    id,\n    newComment\n  }\n});\nexport const changeComment = (id, newComment) => ({\n  type: CHANGE_COMMENT,\n  payload: {\n    id,\n    newComment\n  }\n});","map":{"version":3,"sources":["/home/dev/Desktop/socialFront/src/Redux/actions/post.js"],"names":["ADD_NEW_COMMENT","ADD_NEW_POST","CHANGE_COMMENT","CHANGE_POST","DELETE_COMMENT","DELETE_POST","GET_CORRENT_POST","GET_POSTS_ALL","REQUEST_GET_POSTS_LIMITED","GET_POSTS_LIMITED","REQUEST_ADD_NEW_COMMENT","REQUEST_ADD_NEW_POST","REQUEST_CHANGE_COMMENT","REQUEST_CHANGE_POST","REQUEST_DELETE_COMMENT","REQUEST_DELETE_POST","REQUEST_GET_CORRENT_POST","REQUEST_GET_POSTS_ALL","reqGetPostsAll","type","getPostsAll","allPosts","payload","reqGetPostLimited","count","getPostsLimited","posts","reqGetCorrentPost","id","getCorrentPost","post","addNewPost","newPost","getDataForPost","reqDeletePost","deletePost","reqChangePost","newData","changePost","reqAddNewComment","addNewComment","newComment","reqDeleteComment","commentId","postId","deleteComment","reqChangeComment","changeComment"],"mappings":"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","sourcesContent":["import {\n  ADD_NEW_COMMENT,\n  ADD_NEW_POST,\n  CHANGE_COMMENT,\n  CHANGE_POST,\n  DELETE_COMMENT,\n  DELETE_POST,\n  GET_CORRENT_POST,\n  GET_POSTS_ALL,\n  REQUEST_GET_POSTS_LIMITED,\n  GET_POSTS_LIMITED,\n  REQUEST_ADD_NEW_COMMENT,\n  REQUEST_ADD_NEW_POST,\n  REQUEST_CHANGE_COMMENT,\n  REQUEST_CHANGE_POST,\n  REQUEST_DELETE_COMMENT,\n  REQUEST_DELETE_POST,\n  REQUEST_GET_CORRENT_POST,\n  REQUEST_GET_POSTS_ALL,\n} from '../actions/types';\n\n//-----------------------------------------------------------//\n//---------------------- POST ACTIONS -----------------------//\n//-----------------------------------------------------------//\n\n// --------------------Get All Posts----------------------- //\n\nexport const reqGetPostsAll = () => ({\n  type: REQUEST_GET_POSTS_ALL,\n});\n\nexport const getPostsAll = (allPosts) => ({\n  type: GET_POSTS_ALL,\n  payload: allPosts,\n});\n\n// --------------------Get Posts Limited----------------------- //\n\nexport const reqGetPostLimited = (count) => ({\n  type: REQUEST_GET_POSTS_LIMITED,\n  payload: count,\n});\n\nexport const getPostsLimited = (posts) => ({\n  type: GET_POSTS_LIMITED,\n  payload: posts,\n});\n\n// --------------------Get Corrent Post----------------------- //\n\nexport const reqGetCorrentPost = (id) => ({\n  type: REQUEST_GET_CORRENT_POST,\n  payload: id,\n});\n\nexport const getCorrentPost = (post) => ({\n  type: GET_CORRENT_POST,\n  payload: post,\n});\n\n// --------------------Add New Post----------------------- //\n\nexport const addNewPost = (newPost) => ({\n  type: ADD_NEW_POST,\n  payload: newPost,\n});\n\nexport const getDataForPost = (newPost) => ({\n  type: REQUEST_ADD_NEW_POST,\n  payload: newPost,\n});\n\n// --------------------Delete Post----------------------- //\nexport const reqDeletePost = (id) => ({\n  type: REQUEST_DELETE_POST,\n  payload: id,\n});\n\nexport const deletePost = (id) => ({\n  type: DELETE_POST,\n  payload: id,\n});\n\n// --------------------Change Post----------------------- //\n\nexport const reqChangePost = (id, newData) => ({\n  type: REQUEST_CHANGE_POST,\n  payload: { id, newData },\n});\n\nexport const changePost = (changePost) => ({\n  type: CHANGE_POST,\n  payload: changePost,\n});\n\n//-----------------------------------------------------------//\n//---------------------- COMMENT ACTIONS --------------------//\n//-----------------------------------------------------------//\n\n// --------------------Add new comment----------------------- //\n\nexport const reqAddNewComment = (payload) => ({\n  type: REQUEST_ADD_NEW_COMMENT,\n  payload,\n});\n\nexport const addNewComment = (newComment) => ({\n  type: ADD_NEW_COMMENT,\n  payload: newComment,\n});\n\n// --------------------Delete Comment----------------------- //\n\nexport const reqDeleteComment = (commentId, postId) => ({\n  type: REQUEST_DELETE_COMMENT,\n  payload: { commentId, postId },\n});\n\nexport const deleteComment = (commentId, postId) => ({\n  type: DELETE_COMMENT,\n  payload: { commentId, postId },\n});\n\n// --------------------Change Comment----------------------- //\n\nexport const reqChangeComment = (id, newComment) => ({\n  type: REQUEST_CHANGE_COMMENT,\n  payload: { id, newComment },\n});\n\nexport const changeComment = (id, newComment) => ({\n  type: CHANGE_COMMENT,\n  payload: { id, newComment },\n});\n"]},"metadata":{},"sourceType":"module"}