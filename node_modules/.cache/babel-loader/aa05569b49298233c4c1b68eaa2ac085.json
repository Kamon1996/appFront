{"ast":null,"code":"import { INPUT_CHANGE, LOG_OUT, SIGN_IN, REQUEST_LOG_IN, CLEAR_FORM } from '../../actions/types';\nconst initialState = {\n  name: '',\n  sername: '',\n  email: '',\n  nickname: '',\n  password: '',\n  posts: [{}],\n  comments: [{}],\n  isLogged: false\n};\nexport function user() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REQUEST_LOG_IN:\n      return state;\n\n    case CLEAR_FORM:\n      return { ...state,\n        first_name: '',\n        last_name: '',\n        email: '',\n        login: '',\n        password: ''\n      };\n\n    case LOG_OUT:\n      localStorage.removeItem('access-token');\n      return { ...state,\n        isLogged: false\n      };\n\n    case INPUT_CHANGE:\n      state[action.keyName] = action.value;\n      return { ...state\n      };\n\n    case SIGN_IN:\n      return { ...state,\n        ...action.payload.data.user,\n        isLogged: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/dev/Desktop/socialFront/src/Redux/reducers/other/user.js"],"names":["INPUT_CHANGE","LOG_OUT","SIGN_IN","REQUEST_LOG_IN","CLEAR_FORM","initialState","name","sername","email","nickname","password","posts","comments","isLogged","user","state","action","type","first_name","last_name","login","localStorage","removeItem","keyName","value","payload","data"],"mappings":"AAAA,SACEA,YADF,EAEEC,OAFF,EAGEC,OAHF,EAIEC,cAJF,EAKEC,UALF,QAMO,qBANP;AAQA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,QAAQ,EAAE,EALS;AAMnBC,EAAAA,KAAK,EAAE,CAAC,EAAD,CANY;AAOnBC,EAAAA,QAAQ,EAAE,CAAC,EAAD,CAPS;AAQnBC,EAAAA,QAAQ,EAAE;AARS,CAArB;AAWA,OAAO,SAASC,IAAT,GAA4C;AAAA,MAA9BC,KAA8B,uEAAtBV,YAAsB;AAAA,MAARW,MAAQ;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKd,cAAL;AACE,aAAOY,KAAP;;AAEF,SAAKX,UAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELG,QAAAA,UAAU,EAAE,EAFP;AAGLC,QAAAA,SAAS,EAAE,EAHN;AAILX,QAAAA,KAAK,EAAE,EAJF;AAKLY,QAAAA,KAAK,EAAE,EALF;AAMLV,QAAAA,QAAQ,EAAE;AANL,OAAP;;AASF,SAAKT,OAAL;AACEoB,MAAAA,YAAY,CAACC,UAAb,CAAwB,cAAxB;AACA,aAAO,EAAE,GAAGP,KAAL;AAAYF,QAAAA,QAAQ,EAAE;AAAtB,OAAP;;AACF,SAAKb,YAAL;AACEe,MAAAA,KAAK,CAACC,MAAM,CAACO,OAAR,CAAL,GAAwBP,MAAM,CAACQ,KAA/B;AACA,aAAO,EAAE,GAAGT;AAAL,OAAP;;AACF,SAAKb,OAAL;AACE,aAAO,EACL,GAAGa,KADE;AAEL,WAAGC,MAAM,CAACS,OAAP,CAAeC,IAAf,CAAoBZ,IAFlB;AAGLD,QAAAA,QAAQ,EAAE;AAHL,OAAP;;AAKF;AACE,aAAOE,KAAP;AA3BJ;AA6BD","sourcesContent":["import {\n  INPUT_CHANGE,\n  LOG_OUT,\n  SIGN_IN,\n  REQUEST_LOG_IN,\n  CLEAR_FORM,\n} from '../../actions/types';\n\nconst initialState = {\n  name: '',\n  sername: '',\n  email: '',\n  nickname: '',\n  password: '',\n  posts: [{}],\n  comments: [{}],\n  isLogged: false,\n};\n\nexport function user(state = initialState, action) {\n  switch (action.type) {\n    case REQUEST_LOG_IN:\n      return state;\n\n    case CLEAR_FORM:\n      return {\n        ...state,\n        first_name: '',\n        last_name: '',\n        email: '',\n        login: '',\n        password: '',\n      };\n\n    case LOG_OUT:\n      localStorage.removeItem('access-token');\n      return { ...state, isLogged: false };\n    case INPUT_CHANGE:\n      state[action.keyName] = action.value;\n      return { ...state };\n    case SIGN_IN:\n      return {\n        ...state,\n        ...action.payload.data.user,\n        isLogged: true,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}