{"ast":null,"code":"import { ADD_NEW_COMMENT, ADD_NEW_POST, CHANGE_POST, DELETE_COMMENT, DELETE_POST, GET_POSTS_ALL } from '../../actions/types';\nconst initialState = [];\nexport function posts() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_NEW_POST:\n      return [...state, { ...action.payload.data,\n        comments: []\n      }];\n\n    case GET_POSTS_ALL:\n      return action.payload;\n\n    case DELETE_POST:\n      return state.filter(post => post.id !== action.payload);\n\n    case CHANGE_POST:\n      return state.map(post => post.id === action.payload.id ? { ...post,\n        ...action.payload\n      } : post);\n\n    case ADD_NEW_COMMENT:\n      return state.map(post => {\n        if (post.id === action.payload.post_id) {\n          post.comments.push(action.payload);\n          return post;\n        }\n\n        return post;\n      });\n\n    case DELETE_COMMENT:\n      return state.map(post => {\n        if (post.id === action.payload.postId) {\n          post.comments = post.comments.filter(comment => comment.id !== action.payload.commentId);\n          return post;\n        }\n\n        return post;\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/dev/Desktop/socialFront/src/Redux/reducers/other/posts.js"],"names":["ADD_NEW_COMMENT","ADD_NEW_POST","CHANGE_POST","DELETE_COMMENT","DELETE_POST","GET_POSTS_ALL","initialState","posts","state","action","type","payload","data","comments","filter","post","id","map","post_id","push","postId","comment","commentId"],"mappings":"AAAA,SACEA,eADF,EAEEC,YAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,WALF,EAMEC,aANF,QAOO,qBAPP;AASA,MAAMC,YAAY,GAAG,EAArB;AAEA,OAAO,SAASC,KAAT,GAA6C;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,YAAL;AACE,aAAO,CAAC,GAAGO,KAAJ,EAAW,EAAE,GAAGC,MAAM,CAACE,OAAP,CAAeC,IAApB;AAA0BC,QAAAA,QAAQ,EAAE;AAApC,OAAX,CAAP;;AAEF,SAAKR,aAAL;AACE,aAAOI,MAAM,CAACE,OAAd;;AAEF,SAAKP,WAAL;AACE,aAAOI,KAAK,CAACM,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAA1C,CAAP;;AAEF,SAAKT,WAAL;AACE,aAAOM,KAAK,CAACS,GAAN,CAAWF,IAAD,IACfA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeK,EAA3B,GAAgC,EAAE,GAAGD,IAAL;AAAW,WAAGN,MAAM,CAACE;AAArB,OAAhC,GAAiEI,IAD5D,CAAP;;AAIF,SAAKf,eAAL;AACE,aAAOQ,KAAK,CAACS,GAAN,CAAWF,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeO,OAA/B,EAAwC;AACtCH,UAAAA,IAAI,CAACF,QAAL,CAAcM,IAAd,CAAmBV,MAAM,CAACE,OAA1B;AACA,iBAAOI,IAAP;AACD;;AACD,eAAOA,IAAP;AACD,OANM,CAAP;;AAOF,SAAKZ,cAAL;AACE,aAAOK,KAAK,CAACS,GAAN,CAAWF,IAAD,IAAU;AACzB,YAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeS,MAA/B,EAAuC;AACrCL,UAAAA,IAAI,CAACF,QAAL,GAAgBE,IAAI,CAACF,QAAL,CAAcC,MAAd,CACbO,OAAD,IAAaA,OAAO,CAACL,EAAR,KAAeP,MAAM,CAACE,OAAP,CAAeW,SAD7B,CAAhB;AAGA,iBAAOP,IAAP;AACD;;AACD,eAAOA,IAAP;AACD,OARM,CAAP;;AASF;AACE,aAAOP,KAAP;AAlCJ;AAoCD","sourcesContent":["import {\n  ADD_NEW_COMMENT,\n  ADD_NEW_POST,\n  CHANGE_POST,\n  DELETE_COMMENT,\n  DELETE_POST,\n  GET_POSTS_ALL,\n} from '../../actions/types';\n\nconst initialState = [];\n\nexport function posts(state = initialState, action) {\n  switch (action.type) {\n    case ADD_NEW_POST:\n      return [...state, { ...action.payload.data, comments: [] }];\n\n    case GET_POSTS_ALL:\n      return action.payload;\n\n    case DELETE_POST:\n      return state.filter((post) => post.id !== action.payload);\n\n    case CHANGE_POST:\n      return state.map((post) =>\n        post.id === action.payload.id ? { ...post, ...action.payload } : post\n      );\n\n    case ADD_NEW_COMMENT:\n      return state.map((post) => {\n        if (post.id === action.payload.post_id) {\n          post.comments.push(action.payload);\n          return post;\n        }\n        return post;\n      });\n    case DELETE_COMMENT:\n      return state.map((post) => {\n        if (post.id === action.payload.postId) {\n          post.comments = post.comments.filter(\n            (comment) => comment.id !== action.payload.commentId\n          );\n          return post;\n        }\n        return post;\n      });\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}