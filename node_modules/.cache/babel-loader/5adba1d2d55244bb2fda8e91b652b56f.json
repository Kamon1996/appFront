{"ast":null,"code":"import { rootReducer } from '../reducers/rootReducer';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { sagaWatcher } from '../sagas/sagas';\n\nfunction configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n  const store = createStore(rootReducer, {}, composedEnhancers);\n  sagaMiddleware.run(sagaWatcher);\n  return store;\n}\n\nexport const store = configureStore();\nexport const storeData = store.getState();","map":{"version":3,"sources":["/home/dev/Desktop/socialFront/src/Redux/store/configureStore.js"],"names":["rootReducer","applyMiddleware","createStore","composeWithDevTools","createSagaMiddleware","sagaWatcher","configureStore","sagaMiddleware","middlewares","middlewareEnhancer","enhancers","composedEnhancers","store","run","storeData","getState"],"mappings":"AAAA,SAASA,WAAT,QAA4B,yBAA5B;AAEA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,WAAT,QAA4B,gBAA5B;;AAEA,SAASC,cAAT,GAA0B;AACxB,QAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AACA,QAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;AACA,QAAME,kBAAkB,GAAGR,eAAe,CAAC,GAAGO,WAAJ,CAA1C;AAEA,QAAME,SAAS,GAAG,CAACD,kBAAD,CAAlB;AACA,QAAME,iBAAiB,GAAGR,mBAAmB,CAAC,GAAGO,SAAJ,CAA7C;AAEA,QAAME,KAAK,GAAGV,WAAW,CAACF,WAAD,EAAc,EAAd,EAAkBW,iBAAlB,CAAzB;AACAJ,EAAAA,cAAc,CAACM,GAAf,CAAmBR,WAAnB;AAEA,SAAOO,KAAP;AACD;;AAED,OAAO,MAAMA,KAAK,GAAGN,cAAc,EAA5B;AACP,OAAO,MAAMQ,SAAS,GAAGF,KAAK,CAACG,QAAN,EAAlB","sourcesContent":["import { rootReducer } from '../reducers/rootReducer';\n\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport { sagaWatcher } from '../sagas/sagas';\n\nfunction configureStore() {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(rootReducer, {}, composedEnhancers);\n  sagaMiddleware.run(sagaWatcher);\n\n  return store;\n}\n\nexport const store = configureStore();\nexport const storeData = store.getState();\n"]},"metadata":{},"sourceType":"module"}