{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/socialFront/src/components/Post/Post.jsx\",\n    _s = $RefreshSig$();\n\nimport './index.css';\nimport Comment from '../Comment/Comment';\nimport React, { useEffect, useState } from 'react';\nimport InputField from './InputField/InputField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { reqAddNewComment, reqChangePost, reqDeleteComment, reqDeletePost, reqGetCorrentPost } from '../../Redux/actions/post';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Post(props) {\n  _s();\n\n  const {\n    id,\n    user_id,\n    author,\n    title,\n    body,\n    createdAt,\n    updatedAt,\n    comments\n  } = props.data;\n  console.log(props);\n  const userID = author.user_id;\n  const [fieldIsShowed, showAddCommentField] = useState(false);\n  const [wantMoreComments, showMoreComments] = useState(false);\n  const [editeble, allowEditeble] = useState(false);\n  const dispatch = useDispatch();\n\n  const saveChangeHandler = post => {\n    const body = post.querySelector('.post-text').innerText;\n    const title = post.querySelector('.post-title').innerText;\n    dispatch(reqChangePost(id, {\n      title,\n      body\n    }));\n    allowEditeble(!editeble);\n  };\n\n  const deletePostHandler = id => {\n    dispatch(reqDeletePost(id));\n  };\n\n  const addNewCommentHandler = comment => {\n    comment && dispatch(reqAddNewComment({\n      title: comment,\n      post_id: id\n    }));\n  };\n\n  const deleteCommentHandler = commentId => {\n    dispatch(reqDeleteComment(commentId, id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: id,\n    className: \"post-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-item-header row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"small-avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: user_id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-ellipsis-h\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"pop-up__wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: `${id}`,\n            className: \"btn-nice\",\n            children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0434\\u0435\\u0442\\u0430\\u043B\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), userID === user_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => allowEditeble(!editeble),\n              className: \"btn-nice\",\n              children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => deletePostHandler(id),\n              className: \"btn-nice\",\n              children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0437\\u0430\\u043F\\u0438\\u0441\\u044C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      contentEditable: editeble,\n      className: \"post-title\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      contentEditable: editeble,\n      className: \"post-text\",\n      children: body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), editeble && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => saveChangeHandler(e.target.parentElement),\n      className: \"btn-nice blue btn-edit\",\n      children: \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-action-buttons row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"like-btn action-btn row\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-heart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => showAddCommentField(!fieldIsShowed),\n        className: \"comment-btn action-btn row\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-comment-alt\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: comments === null || comments === void 0 ? void 0 : comments.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"repost-btn action-btn row\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comments\",\n      children: [comments && wantMoreComments ? comments.map(comment => {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          data: comment,\n          userId: userID,\n          onDelete: () => deleteCommentHandler(comment.id)\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this);\n      }) : comments === null || comments === void 0 ? void 0 : comments.slice(0, 2).map(comment => {\n        return /*#__PURE__*/_jsxDEV(Comment, {\n          data: comment,\n          userId: userID,\n          onDelete: () => deleteCommentHandler(comment.id)\n        }, comment.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 17\n        }, this);\n      }), (comments === null || comments === void 0 ? void 0 : comments.length) > 2 && !wantMoreComments && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => showMoreComments(!wantMoreComments, showAddCommentField(true)),\n        className: \"btn-nice\",\n        children: \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C \\u0441\\u043B\\u0435\\u0434\\u0443\\u044E\\u0449\\u0438\\u0435 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), fieldIsShowed && /*#__PURE__*/_jsxDEV(InputField, {\n      onSend: addNewCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Post, \"7DIHxP5LmWaKr8naKLLsQhC6Ws4=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/dev/Desktop/socialFront/src/components/Post/Post.jsx"],"names":["Comment","React","useEffect","useState","InputField","useDispatch","useSelector","reqAddNewComment","reqChangePost","reqDeleteComment","reqDeletePost","reqGetCorrentPost","Link","Post","props","id","user_id","author","title","body","createdAt","updatedAt","comments","data","console","log","userID","fieldIsShowed","showAddCommentField","wantMoreComments","showMoreComments","editeble","allowEditeble","dispatch","saveChangeHandler","post","querySelector","innerText","deletePostHandler","addNewCommentHandler","comment","post_id","deleteCommentHandler","commentId","e","target","parentElement","length","map","slice"],"mappings":"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","sourcesContent":["import './index.css';\nimport Comment from '../Comment/Comment';\n\nimport React, { useEffect, useState } from 'react';\nimport InputField from './InputField/InputField';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  reqAddNewComment,\n  reqChangePost,\n  reqDeleteComment,\n  reqDeletePost,\n  reqGetCorrentPost,\n} from '../../Redux/actions/post';\nimport { Link } from 'react-router-dom';\n\nexport default function Post(props) {\n  const { id, user_id, author, title, body, createdAt, updatedAt, comments } =\n    props.data;\n  console.log(props);\n\n  const userID = author.user_id;\n\n  const [fieldIsShowed, showAddCommentField] = useState(false);\n  const [wantMoreComments, showMoreComments] = useState(false);\n  const [editeble, allowEditeble] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const saveChangeHandler = (post) => {\n    const body = post.querySelector('.post-text').innerText;\n    const title = post.querySelector('.post-title').innerText;\n    dispatch(reqChangePost(id, { title, body }));\n    allowEditeble(!editeble);\n  };\n\n  const deletePostHandler = (id) => {\n    dispatch(reqDeletePost(id));\n  };\n\n  const addNewCommentHandler = (comment) => {\n    comment && dispatch(reqAddNewComment({ title: comment, post_id: id }));\n  };\n\n  const deleteCommentHandler = (commentId) => {\n    dispatch(reqDeleteComment(commentId, id));\n  };\n\n  return (\n    <div id={id} className='post-item'>\n      <div className='post-item-header row'>\n        <div className='small-avatar'></div>\n        <div className='header-info'>\n          <h4>{user_id}</h4>\n          <p>{createdAt}</p>\n        </div>\n        <i className='fas fa-ellipsis-h'>\n          <ul className='pop-up__wrapper'>\n            <Link to={`${id}`} className='btn-nice'>\n              Показать детали\n            </Link>\n            {userID === user_id && (\n              <>\n                <button\n                  onClick={() => allowEditeble(!editeble)}\n                  className='btn-nice'\n                >\n                  Редактировать\n                </button>\n                <button\n                  onClick={() => deletePostHandler(id)}\n                  className='btn-nice'\n                >\n                  Удалить запись\n                </button>\n              </>\n            )}\n          </ul>\n        </i>\n      </div>\n      <h3 contentEditable={editeble} className='post-title'>\n        {title}\n      </h3>\n      <h4 contentEditable={editeble} className='post-text'>\n        {body}\n      </h4>\n      {editeble && (\n        <button\n          onClick={(e) => saveChangeHandler(e.target.parentElement)}\n          className='btn-nice blue btn-edit'\n        >\n          Сохранить\n        </button>\n      )}\n      <div className='post-action-buttons row'>\n        <div className='like-btn action-btn row'>\n          <i className='fas fa-heart'></i>\n          <span>10</span>\n        </div>\n        <div\n          onClick={() => showAddCommentField(!fieldIsShowed)}\n          className='comment-btn action-btn row'\n        >\n          <i className='fas fa-comment-alt'></i>\n          <span>{comments?.length}</span>\n        </div>\n        <div className='repost-btn action-btn row'>\n          <i className='fas fa-share'></i>\n        </div>\n      </div>\n\n      <div className='comments'>\n        {comments && wantMoreComments\n          ? comments.map((comment) => {\n              return (\n                <Comment\n                  data={comment}\n                  userId={userID}\n                  key={comment.id}\n                  onDelete={() => deleteCommentHandler(comment.id)}\n                />\n              );\n            })\n          : comments?.slice(0, 2).map((comment) => {\n              return (\n                <Comment\n                  data={comment}\n                  userId={userID}\n                  key={comment.id}\n                  onDelete={() => deleteCommentHandler(comment.id)}\n                />\n              );\n            })}\n        {comments?.length > 2 && !wantMoreComments && (\n          <button\n            onClick={() =>\n              showMoreComments(!wantMoreComments, showAddCommentField(true))\n            }\n            className='btn-nice'\n          >\n            Показать следующие комментарии\n          </button>\n        )}\n      </div>\n      {fieldIsShowed && <InputField onSend={addNewCommentHandler} />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}